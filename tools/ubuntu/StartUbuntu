#!/bin/bash
############################################
#set 163 source
#install Chrome
#install wine. run configuer wine,(create wine dir in $HOME by configure wine)
#run this script
#restart computer
#set Chrome fonts size (wryh,size:18) 
#set ubuntu fonts size use unity-tweak-tool(fonts->Text scaling factor:1.05)
#set terminal size:(home:150,36)
############################################

## 
HostName=`hostname`
FLiu=""
if [ $HostName = "fliu-thinkpad" ];then
  FLiu="/home/fliu"
else
  FLiu="/home/liufei"
fi
GithubUrl="https://github.com/"
GithubUser="cheetah0216"

## Workspace
DirGithub="$FLiu/github"
DirSoft="$FLiu/soft"
DirWork="$FLiu/work"
DirCodeFonts="/usr/share/fonts/codefonts"
DirWorkSpaceArr=("$DirGithub" "$DirSoft" "$DirWork" "$DirCodeFonts")

## Prerequisite Software
SoftwareArr=("vim" "vim-gnome" "git" "expect" "wget" "unity-tweak-tool" "gconf-editor" "alien" "python-setuptools")

## Github code url
UrlCodeRespository=$GithubUrl$GithubUser"/""CodeRespository.git"
UrlBlog="$GithubUrl$GithubUser"/"$GithubUser"".github.com.git"
GithubUrlArr=("$UrlCodeRespository" "$UrlBlog")

## Set Vim 
DirVimConf=$DirGithub"/CodeRepository/tools/etc/.vim"
VimProfile=$DirGithub"/CodeRepository/tools/etc/.vimrc"

## Set Proflie
DirSource=$DirGithub"/CodeRepository/tools/etc/"

RootBashrc="/root/.bashrc"
HomeBashrc="$FLiu/.bashrc"
GitConf="/root/.gitconfig"
GitIgnore="/root/.gitignore"
Env="$FLiu/.env"
PrivateHosts="/etc/PrivateHosts"

## Set fonts
UrlFonts="http://www.baidupcs.com/file/c6a2fd47f7809e53325ebc59e55cdc06?xcode=0663ef2f90f95b44bddb9dcceb5165dc&fid=1258459933-250528-207959182&time=1372155170&sign=FDTAXER-DCb740ccc5511e5e8fedcff06b081203-IgJEd6J8640k99QDpisOjnheHYU%3D&to=wb&fm=N,N,T&expires=8h&rt=pr&r=950560470&logid=3775787727"

## install latest JDk
UrlJDKPages="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html"

## install PDF XChange Viewer
UrlPDFXCview="http://hot.baidupcs.com/file/28e294f467369e0709131bd23de704f5?xcode=17dfec050908c0295de00b52b6944aae&fid=1258459933-250528-385249265&time=1372153880&sign=FDTAXER-DCb740ccc5511e5e8fedcff06b081203-2Rf8ZIYy%2BJUQQ6pSmr3WVBYoAGE%3D&to=hb&fm=N,Q,U&expires=8h&rt=pr&r=536146358&logid=1528086904"

#install_standard_eclipse
#UrlStandEclipse="http://www.eclipse.org/downloads/"
UrlStandEclipse="http://mirror.bit.edu.cn/eclipse/technology/epp/downloads/release/kepler/R/eclipse-standard-kepler-R-linux-gtk-x86_64.tar.gz"

#instal goagnent
UrlGoagnent="https://github.com/goagent/goagent.git"

#install pythonbrew
PythonbrewDependLibsArr=("build-essential" "libbz2-dev" "libsqlite3-dev" "zlib1g-dev" "libxml2-dev" "libxslt1-dev" "libreadline5" "libreadline5-dev" "libgdbm-dev" "libgdb-dev" "libxml2" "libssl-dev" "tk-dev" "libgdbm-dev" "libexpat1-dev" "libncursesw5-dev")

############
function init_workspace() {
    for DirName in ${DirWorkSpaceArr[@]}
    do
        echo $DirName
        mkdir -p $DirName
    done  
}

function install_prerequisite_soft() {
    sudo apt-get update
    for SoftWare in ${SoftwareArr[@]}
    do
        sudo apt-get -y install $SoftWare
    done
}

function get_github_code() {
    cd $DirGithub
    for CodeUrl in ${GithubUrlArr[@]}
    do
        #echo "$CodeUrl"
        git clone $CodeUrl
    done
}

function set_vim() {
    sudo apt-get -y install exuberant-ctags
    sudo apt-get -y install cscope

    cp -Rf $DirVimConf /root
    cp -Rf $DirVimConf $FLiu
    cp $VimProfile /root
    cp $VimProfile $FLiu
}

function set_profile() {
    cd $DirSource 
    cp .bashrc-root $RootBashrc
    cp .bashrc-home $HomeBashrc
    cp .gitconfig   $GitConf
    cp .gitignore   $GitIgnore
    cp .env         $Env
    cp PrivateHosts $PrivateHosts
    #gvim $RootBashrc $HomeBashrc $GitConf $GitIgnore $Env $PrivateHosts
}

function install_font() {
    cd $DirCodeFonts
    wget -O fonts.zip $UrlFonts 
    unzip fonts.zip
    sudo chmod 755 $DirCodeFonts/*
    rm fonts.zip
    sudo mkfontscale && sudo mkfontdir && sudo fc-cache -fv > /dev/null
}

function install_jdk() {
   cd /tmp
   wget -O JDK.html $UrlJDKPages
   url_latest_jdk=`cat /tmp/JDK.html | grep jdk | grep "linux-x64.tar.gz" | cut -d\" -f12`
   latest_jdk_name=${url_latest_jdk##*/}
   #echo $url_latest_jdk
   #echo $latest_jdk_name
   wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com" $url_latest_jdk -O $latest_jdk_name
   rm /tmp/JDK.html
   mv $latest_jdk_name /usr/local/
   cd /usr/local/
   tar zxvf $latest_jdk_name
   jdk_dir=`ls -lrt |awk -F: '{print '}|tail -n2 | awk '{print $9}' | grep -v ".tar.gz"`
   #echo $jdk_dir
   ln -s $jdk_dir jdk
   sudo update-alternatives --install "/usr/bin/java" "java" "/usr/local/jdk/bin/java" 1
   sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/local/jdk/bin/javac" 1
   sudo update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/local/jdk/bin/javaws" 1
   sudo update-alternatives --install "/usr/lib/mozilla/plugins/libjavaplugin.so" "mozilla-javaplugin.so" "/usr/local/jdk/jre/lib/amd64/libnpjp2.so" 1
   sudo update-alternatives --config java
   sudo update-alternatives --config javac
   sudo update-alternatives --config javaws
   #export JAVA_HOME=/usr/local/jdk
   #export PATH=$PATH:$JAVA_HOME/bin
   #export CLASSPATH=$JAVA_HOME/jre/bin/lib/ext:$JAVA_HOME/lib/tools.jar
}

#PDF XChange Viewer
function install_PDFXCview() {
   cd $FLiu
   cd .wine/drive_c/Program\ Files/
   PDFXCview_Name="PDFXCview_Port.zip"
   PDFXCview_Dir="PDFXCview_Port"
   wget -c -O "$PDFXCview_Name" $UrlPDFXCview
   unzip $PDFXCview_Name
   rm $PDFXCview_Name
   cd $PDFXCview_Dir
   cp PDFXCview /usr/bin
}

function install_standard_eclipse() {
    cd /tmp
    wget -O DwEclipse.html $UrlStandEclipse
    Url_Linux64_Ec=`cat /tmp/DwEclipse.html | grep "Linux 64" | grep "Eclipse Standard" | cut -d\" -f4`
    #echo $Url_Linux64_Ec
    wget -O EcStand.html $Url_Linux64_Ec
    Url_Linux64_Ec=`cat /tmp/EcStand.html | grep "Asia" | cut -d\" -f2`
    #echo $Url_Linux64_Ec
    rm DwEclipse.html
    rm EcStand.html
    wget -O Eclipse_standard_linux_64.tar.gz $UrlStandEclipse
    mv Eclipse_standard_linux_64.tar.gz $SOFT 
    cd $SOFT
    setup Eclipse_standard_linux_64.tar.gz
    tmpEcliseName=`ls -lrt |awk -F: '{print '}|tail -n1 | awk '{print $9}'`
    setup $tmpEcliseName
    ##missing shortcut
    #.... 
}

function install_goagnent() {
    cd $DirSoft
    git clone $UrlGoagnent

    #configure proxy.ini files
    cd $DirSoft/goagent/local
    cp proxy.ini proxy.ini.bk
    appid_line_no=`grep -n "appid" proxy.ini | cut -d: -f1`
    temp=$appid_line_no"d"
    sed -i $temp proxy.ini  
    appid_str=`sed -n '7p' $LF/.pwd | base64 -d`
    strtemp="appid = $appid_str"
    sed -i "$appid_line_no i $strtemp" proxy.ini
    #remove ^M
    dos2unix proxy.ini
}

#pythonbrew is a program to automate the building and installation of Python in the users $HOME.
function install_pythonbrew() {
    sudo easy_install pythonbrew
    pythonbrew_install
    for dependLibs in ${PythonbrewDependLibsArr[@]}
    do
        #echo "$dependLibs"
        sudo apt-get -y install $dependLibs
    done
    source /root/.pythonbrew/etc/bashrc
}

#python2.7.2
#django1.4
function install_bae_django_python() {
    #install python2.7.2
    pythonbrew install 2.7.2
    pythonbrew switch 2.7.2

    #install django1.4
    easy_install pip
    pip install virtualenv
    cd $FLiu
    virtualenv virtual_env
    source $FLiu/virtual_env/bin/activate 
    pip install Django==1.4
    pip freeze
    
    #test Django
    django-admin.py startproject example_django
    cd example_django
    #python manage.py runserver 8080
    #http://127.0.0.1:8080/

    #change the django versions in python2.7.2
    #deactivate
    #pip install Django==1.5.1
    #pip freeze
}

function main() {
    #init_workspace
    #install_prerequisite_soft
    #get_github_code
    #set_vim
    #set_profile
    #install_font
    #install_jdk
    #install_PDFXCview
    #install_standard_eclipse
    #install_goagnent
    #install_pythonbrew
    #install_bae_django_python
}

main
